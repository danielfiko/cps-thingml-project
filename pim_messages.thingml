/* This file contains message and port definitions for the PIM communication */

import "datatypes.thingml" from stl

// General
thing fragment GeneralMsg {
	message sensorinfo(model:String,proto:String,sid:Integer,dataTypes:Integer,temperature:Double, humidity:Long, timeStamp:Long);
	message deviceinfo(did:Integer,name:String,model:String,proto:String, ttype:String,meth:Integer,lastCmd:String,lastValue:Long);
	message set_polling_interval(intrvl:Integer) // how often the PSM will poll the thermometers in milliseconds
	message prompt(txt:String) // meant to send a textual message out to the user
}

// Testing
thing fragment TestMsg {
	message start_temp();
	message next_temp();
	message next_human();
	message next_motion();
}

//Temperature
thing fragment TemperatureMsg {
    message temperature(id:Integer, txt:String, t : Double);
    message add_thermometer(id:Integer,txt:String);
    message set_temperature(t:Double);
    message set_energy_saving_temp(t:Double);
}

// Devices actuators in general

thing fragment DeviceGeneral {
	message add_device(did:Integer);
}

// On/Off actuators
thing fragment OnOffMsg includes DeviceGeneral{
	message SwitchOn(did:Integer);
	message SwitchOff(did:Integer);
	message SwitchStateOn(did:Integer);
	message SwitchStateOff(did:Integer);
	message StateQuery(did:Integer);
	message CurrentPower(power:Integer);
	message TotalPower(power:Double);
	message SwitchChangeOk(did:Integer);
	message SwitchChangeFail(did:Integer);
	message ResetTotalPower(did:Integer);
}

thing fragment SwitchMsg {
	message current_power(id:Integer, kw:Integer);
	message total_power(id:Integer, kwh:Double)
	message show_current_power(did:Integer)
	message show_total_power(did:Integer)
}

thing fragment MotionSensorMsg {
	message motion(did:Integer)
	message no_motion(did:Integer)
	message add_motion_sensor(did:Integer)
}